Given a number K and string str of digits denoting a positive integer, build the largest number possible by performing swap operations on the digits of str at most K times.


Example 1:

Input:
K = 4
str = "1234567"
Output:
7654321
Explanation:
Three swaps can make the
input 1234567 to 7654321, swapping 1
with 7, 2 with 6 and finally 3 with 5
Example 2:

Input:
K = 3
str = "3435335"
Output:
5543333
Explanation:
Three swaps can make the input
3435335 to 5543333, swapping 3 
with 5, 4 with 5 and finally 3 with 4


code:

class Solution
{
    public:
    void swap(char &a,char &b){
        char temp=a;
        a=b;
        b=temp;
    }
    
    void solve(string &str,string &ans,int &k,int index){
        
        ans=max(ans,str);
        
        if(k==0){
            return;
        }
  
        for(int i=index;i<str.length()-1;i++){
            for(int j=i+1;j<str.length();j++){
                if(str[j]>str[i]){ 
                swap(str[i],str[j]);
                k--;
                
                solve(str,ans,k,i); 
                
                swap(str[i],str[j]);
                k++;
                }
            }
        }
    
        
    }
    
    string findMaximumNum(string str, int k)
    {
       string ans="";
       solve(str,ans,k,0);
       return ans;
    }


};

