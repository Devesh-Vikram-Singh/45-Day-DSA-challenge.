Given an integer array nums of unique elements, return all possible 
subsets
 (the power set).

The solution set must not contain duplicate subsets. Return the solution in any order.

 

Example 1:
Input: nums = [1,2,3]
Output: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]

Example 2:
Input: nums = [0]
Output: [[],[0]]


 class Solution {
public:
     void helper(vector<int>& nums,vector<int> &ds,vector<vector<int>> &ans,int index){
         ans.push_back(ds);
       for(int i=index;i<nums.size();i++){
           ds.push_back(nums[i]);
           helper(nums,ds,ans,i+1);
           ds.pop_back();
       }
     }
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> ds;
        int index=0;
        helper(nums,ds,ans,0);
         return ans;
    }
};
