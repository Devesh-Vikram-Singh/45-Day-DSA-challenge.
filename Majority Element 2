Example 1:

Input: nums = [3,2,3]
Output: [3]
Example 2:

Input: nums = [1]
Output: [1]
Example 3:

Input: nums = [1,2]
Output: [1,2]

class Solution {
public:
//method 1
    vector<int> majorityElement(vector<int>& nums) {
         int cnt1=0;
         int cnt2=0;
         int el1=INT_MIN;
         int el2=INT_MIN;
         int n=nums.size();

         for(int i=0;i<n;i++){
             if(cnt1 == 0 && nums[i]!=el2){
                cnt1=1;
                el1=nums[i];
             }
             else if(cnt2 == 0 && nums[i]!=el1){
                cnt2=1;
                el2=nums[i];
             }
             else if(nums[i]==el1){
                cnt1++;
             }
             else if(nums[i]==el2){
                cnt2++;
             }
             else{
                cnt1--;
                cnt2--;
             }
         }
         vector<int> ans;
         int count1=0;
         int count2=0;
         for(int i=0;i<n;i++){
            if(el1==nums[i])
            count1++;
             if(el2==nums[i])
             count2++;
         }
         if(count1>n/3)
            ans.push_back(el1);
         
        if(count2>n/3)
            ans.push_back(el2);
         
         return ans;
    }
};

//method 2

/*vector<int> majorityElement(vector<int>& nums) {
          vector<int> ans;
          map<int,int> mp;
          int n=nums.size();
          int mini=(int)(n/3)+1;
          for(int i=0;i<n;i++){
              mp[nums[i]]++;
          }
           
              for(auto it:mp){
         if(it.second>=mini){
              ans.push_back(it.first);
          }
              }
          return ans;
      }
    };*/
