Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).

Example 1:


Input: root = [1,2,2,3,4,4,3]
Output: true
Example 2:


Input: root = [1,2,2,null,3,null,3]
Output: false


 class Solution {
public:
    bool isSymmetric(TreeNode* root) {
    

    if (root == NULL) return true;
    queue<TreeNode*> q;
    q.push(root->left);
    q.push(root->right);

    while (!q.empty()) {
        TreeNode* node1 = q.front(); q.pop();
        TreeNode* node2 = q.front(); q.pop();

        if (node1 == NULL && node2 == NULL) continue;
        if (node1 == NULL || node2 == NULL) return false;
        if (node1->val != node2->val) return false;

        q.push(node1->left);
        q.push(node2->right);
        q.push(node1->right);
        q.push(node2->left);
    }

    return true;
    }
};
