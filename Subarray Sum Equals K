
Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.
A subarray is a contiguous non-empty sequence of elements within an array.

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2




int subarraySum(vector<int>& nums, int k) {
     /*  unordered_map<int,int> mp;
       mp[0]=1;
       int prefix=0;
       int count=0;
       for(int i=0;i<nums.size();i++){
           prefix+=nums[i];
           int remove=prefix-k;
           if(mp.count(remove)){
            count+=mp[remove];
            mp[prefix]++;
           }
           else
           mp[prefix]++;

     } 
     return count;*/

     unordered_map<int,int> mp;
       mp[0]=1;
       int prefix=0;
       int count=0;
       for(int i=0;i<nums.size();i++){
           prefix+=nums[i];
          int remove=prefix-k;
          count+=mp[remove];
          mp[prefix]++;
     } 
     return count;
    }
};
