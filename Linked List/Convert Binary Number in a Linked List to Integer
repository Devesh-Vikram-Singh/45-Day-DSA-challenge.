Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.

Return the decimal value of the number in the linked list.

The most significant bit is at the head of the linked list.

 

Example 1:


Input: head = [1,0,1]
Output: 5
Explanation: (101) in base 2 = (5) in base 10
Example 2:

Input: head = [0]
Output: 0


lass Solution {
public:
  /*  int getDecimalValue(ListNode* head) {
         int ans=0;
         while(head!=NULL){
            ans=ans*2+head->val;
            head=head->next;
         }
         return ans;
    }
};*/

//method =2
int getDecimalValue(ListNode* head) {
    string result;
    while(head!=NULL){
        result+=to_string(head->val);
        head=head->next;
    }
    int ans=0
    int previous=1;
    for(int i=nums.size()-1;i>=0;i--){
        ans+=previous*(stoi(result.substr(i,1)));
        previous*=2;
    }
    return ans;
}
};
