Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.


class Solution {
public:
//Method=1 with space
   /* string reverseWords(string s) {
        string result;
        int i=0;
        int n=s.length();
       
        while(i < n){
            while(i < n && s[i] == ' ') i++;
            if(i >= n) break;
            int j=i+1;
            while(j < n && s[j]!=' ') j++;
            string sub=s.substr(i,j-i);
            if(result.empty()) result=sub;
            else result = sub + " " + result;
            i=j+1;
        }
        return result;
    }
};*/

//method=2 using STL
/*string reverseWords(string s) {
    stringstream ss(s);
    string result="";
    int n=s.length();
    string token="";
    while(ss >> token){
       if (!result.empty()) {
                result = token + " " + result;
            } 
            else {
                result = token;
            }
        }
    return result;
}
};*/
 // method=3 without space
string reverseWords(string s) {
    reverse(s.begin(),s.end());

    int i=0;
    int l=0;
    int r=0;
    int n=s.length();
    while(i<n){
         while(i<n && s[i]!=' ')
         {
            s[r]=s[i];
            r++;
            i++;
         }
         //reverse
         if(l<r){
               reverse(s.begin()+l,s.begin()+r);
               s[r]=' ';
               r++;
               l=r;
         }
         
         i++;
        
    }
        s=s.substr(0,r-1);
       return s;
}
};
